@model IEnumerable<Курсач.Models.CarDetails>

@{
    ViewBag.Title = "Автозапчасти";
}

<h2>Автозапчасти</h2>

<p>
    @Html.ActionLink("Добавить в Каталог", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.detail_articul)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.year_release)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.kuzov_type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CarMark.mark_name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.detail_articul)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.year_release)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.cost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.kuzov_type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CarMark.mark_name)
        </td>
        <td>
            @Html.ActionLink("Редактировать", "Edit", new { id=item.id_details }) |
            @Html.ActionLink("Описание", "Details", new { id=item.id_details }) |
            @Html.ActionLink("Удалить", "Delete", new { id=item.id_details })
        </td>
    </tr>
}

</table>

<script>
// Quick and simple export target #table_id into a csv
    function download_table_as_csv(table_id, separator = ',') {
        // Select rows from table_id
        var rows = document.querySelectorAll('table#' + table_id + ' tr');
        // Construct csv
        var csv = [];
        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll('td, th');
            for (var j = 0; j < cols.length - 1; j++) {
                // Clean innertext to remove multiple spaces and jumpline (break csv)
                var data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ')
                data = data.replace(/"/g, '""');
                // Push escaped string
                row.push('"' + data + '"');
            }
            csv.push(row.join(separator));
        }
        var csv_string = csv.join('\n');
        // Download it
        var filename = 'data' + table_id + '_' + new Date().toLocaleDateString() + '.txt';
        var link = document.createElement('a');
        link.style.display = 'none';
        link.setAttribute('target', '_blank');
        link.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv_string));
        link.setAttribute('download', filename);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
</script>